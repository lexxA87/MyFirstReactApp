{"version":3,"sources":["components/Diologues/Diologues.module.css","components/Diologues/DiologItem/DiologItem.jsx","components/Diologues/Message/Message.jsx","components/Diologues/Diologues.jsx","hoc/withAuthRedirect.js","components/Diologues/DiologuesContainer.jsx"],"names":["module","exports","DiologItem","props","path","id","className","s","item","to","activeClassName","activeLink","name","Message","message","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","TextArea","placeholder","validate","required","Diologues","diologsElements","diologsPage","diologs","map","d","messagesElements","messages","m","diologsItems","values","addMessage","newMessageBody","mapStateToPropsForRedirect","state","isAuth","auth","compose","connect","dispatch","newMessageText","addMessageActionCreator","Component","RedirectComponent","this","React"],"mappings":"mHACAA,EAAOC,QAAU,CAAC,QAAU,2BAA2B,aAAe,gCAAgC,KAAO,wBAAwB,WAAa,8BAA8B,SAAW,8B,8FCc3KC,EAXG,SAACC,GAEhB,IAAIC,EAAO,aAAeD,EAAME,GAEhC,OACI,qBAAKC,UAAWC,IAAEC,KAAlB,SACY,cAAC,IAAD,CAASC,GAAIL,EAAMM,gBAAiBH,IAAEI,WAAtC,SAAmDR,EAAMS,UCJ9DC,EAJC,SAACV,GACb,OAAO,qBAAKG,UAAWC,IAAEO,QAAlB,SAA4BX,EAAMW,W,kDC+BvCC,EAAcC,YAAiB,IAoB/BC,EAAsBC,YAAU,CAAEC,KAAM,wBAAlBD,EAnBL,SAACf,GACtB,OACE,uBAAMiB,SAAUjB,EAAMkB,aAAtB,wBAEE,8BACE,cAACC,EAAA,EAAD,CACEC,UAAWC,IACXC,YAAa,qBACbb,KAAM,iBACNc,SAAU,CAACC,IAAUZ,OAGzB,8BACE,kDAUOa,EAlDG,SAACzB,GACjB,IAAI0B,EAAkB1B,EAAM2B,YAAYC,QAAQC,KAAI,SAACC,GAAD,OAClD,cAAC,EAAD,CAAYrB,KAAMqB,EAAErB,KAAMP,GAAI4B,EAAE5B,QAG9B6B,EAAmB/B,EAAM2B,YAAYK,SAASH,KAAI,SAACI,GAAD,OACpD,cAAC,EAAD,CAAStB,QAASsB,EAAEtB,aAStB,OACE,sBAAKR,UAAWC,IAAEwB,QAAlB,UACE,qBAAKzB,UAAWC,IAAE8B,aAAlB,SAAiCR,IACjC,sBAAKvB,UAAWC,IAAE4B,SAAlB,UACE,8BAAMD,IACN,uBACA,cAACjB,EAAD,CAAqBG,SAZP,SAACkB,GAGnBnC,EAAMoC,WAAWD,EAAOE,0B,8CChBxBC,EAA6B,SAACC,GAAD,MAAY,CAC3CC,OAAQD,EAAME,KAAKD,S,QCkBNE,sBACbC,aAfsB,SAACJ,GACvB,MAAO,CACLZ,YAAaY,EAAMZ,gBAII,SAACiB,GAC1B,MAAO,CACLR,WAAY,SAACS,GACXD,EAASE,YAAwBD,UDVP,SAACE,GAAe,IACxCC,EADuC,4JAE3C,WACE,OAAKC,KAAKjD,MAAMwC,OACT,cAACO,EAAD,eAAeE,KAAKjD,QADI,cAAC,IAAD,CAAUM,GAAG,eAHH,GACb4C,IAAMH,WAUtC,OAHqCJ,YAAQL,EAARK,CACnCK,KCMWN,CAGbjB","file":"static/js/4.c0ac3bba.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"diologs\":\"Diologues_diologs__3zSOU\",\"diologsItems\":\"Diologues_diologsItems__27jMm\",\"item\":\"Diologues_item__3ezBG\",\"activeLink\":\"Diologues_activeLink__yWQjv\",\"messages\":\"Diologues_messages__3Fy4w\"};","import s from './../Diologues.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\nconst DiologItem = (props) => {\r\n    \r\n    let path = \"/messages/\" + props.id;\r\n    \r\n    return (\r\n        <div className={s.item}>\r\n                    <NavLink to={path} activeClassName={s.activeLink}>{props.name}</NavLink>\r\n                </div>\r\n    );\r\n}\r\n\r\nexport  default DiologItem;","import s from './../Diologues.module.css';\r\n\r\nconst Message = (props) => {\r\n    return <div className={s.message}>{props.message}</div>\r\n}\r\n\r\nexport default Message;","import s from \"./Diologues.module.css\";\r\nimport DiologItem from \"./DiologItem/DiologItem\";\r\nimport Message from \"./Message/Message\";\r\nimport React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { maxLengthCreator, required } from \"../../utils/validators/validators\";\r\nimport { TextArea } from \"../Common/FormsControls/FormsControls\";\r\n\r\nconst Diologues = (props) => {\r\n  let diologsElements = props.diologsPage.diologs.map((d) => (\r\n    <DiologItem name={d.name} id={d.id} />\r\n  ));\r\n\r\n  let messagesElements = props.diologsPage.messages.map((m) => (\r\n    <Message message={m.message} />\r\n  ));\r\n\r\n  let addNewMessage = (values) => {\r\n    //debugger;\r\n    //alert(values.newMessageBody);\r\n    props.addMessage(values.newMessageBody);\r\n  };\r\n\r\n  return (\r\n    <div className={s.diologs}>\r\n      <div className={s.diologsItems}>{diologsElements}</div>\r\n      <div className={s.messages}>\r\n        <div>{messagesElements}</div>\r\n        <hr />\r\n        <AddMessageFormRedux onSubmit={addNewMessage} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nconst maxLength50 = maxLengthCreator(50);\r\nconst AddMessageForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      New message\r\n      <div>\r\n        <Field\r\n          component={TextArea}\r\n          placeholder={\"Enter your message\"}\r\n          name={\"newMessageBody\"}\r\n          validate={[required, maxLength50]}\r\n        />\r\n      </div>\r\n      <div>\r\n        <button>Send</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst AddMessageFormRedux = reduxForm({ form: \"diologAddMessageForm\" })(\r\n  AddMessageForm\r\n);\r\n\r\nexport default Diologues;\r\n","import React from \"react\";\r\nimport { Redirect } from \"react-router\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) return <Redirect to=\"/login\" />;\r\n      return <Component {...this.props} />;\r\n    }\r\n  }\r\n\r\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(\r\n    RedirectComponent\r\n  );\r\n  return ConnectedAuthRedirectComponent;\r\n};\r\n","import { connect } from \"react-redux\";\r\nimport {\r\n  addMessageActionCreator,\r\n} from \"../../redux/diologs-reducer\";\r\nimport Diologues from \"./Diologues\";\r\n\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    diologsPage: state.diologsPage,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addMessage: (newMessageText) => {\r\n      dispatch(addMessageActionCreator(newMessageText));\r\n    }\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect\r\n)(Diologues);\r\n"],"sourceRoot":""}